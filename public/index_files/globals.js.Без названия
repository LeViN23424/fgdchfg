function loadFont(fontName, woffUrl, woff2Url, onlyLoadFontOnSecondPageload) {
    var nua = navigator.userAgent;
    var noSupport = !window.addEventListener // IE8 and below
            || (nua.match(/(Android (2|3|4.0|4.1|4.2|4.3))|(Opera (Mini|Mobi))/) && !nua.match(/Chrome/)) // Android Stock Browser below 4.4 and Opera Mini

    if (noSupport) { return; }

    var loSto = {};
    try {
        loSto = localStorage || {};
    } catch(ex) {}

    var localStoragePrefix = 'x-font-' + fontName;
    var localStorageUrlKey = localStoragePrefix + 'url';
    var localStorageCssKey = localStoragePrefix + 'css';
    var storedFontUrl = loSto[localStorageUrlKey];
    var storedFontCss = loSto[localStorageCssKey];

    var styleElement = document.createElement('style');
    styleElement.rel = 'stylesheet';
    document.head.appendChild(styleElement);

    if (storedFontCss && (storedFontUrl === woffUrl || storedFontUrl === woff2Url)) {
        styleElement.textContent = storedFontCss;
    } else {

        var url = (woff2Url && supportsWoff2())
            ? woff2Url // WOFF2 URL provided and supported
            : woffUrl; // only WOFF support

        var request = new XMLHttpRequest();
        request.open('GET', url);
        request.onload = function() {
            if (request.status >= 200 && request.status < 400) {
                loSto[localStorageUrlKey] = url;
                loSto[localStorageCssKey] = request.responseText;
                if (!onlyLoadFontOnSecondPageload) {
                  styleElement.textContent = request.responseText;
                }
            }
        };
        request.send();
    }

    function supportsWoff2() {
        if (!window.FontFace) {
            return false;
        }

      var f = new FontFace('t', 'url("data:application/font-woff2,") format("woff2")', {});
      var p = f.load();
      try {p.then(null, function(){});}catch(e){}
      return f.status === 'loading';
    }
}

function loadCSS( href, before, media ){
  var ss = window.document.createElement( "link" );
  var ref = before || window.document.getElementsByTagName( "meta" )[ 0 ];
  var sheets = window.document.styleSheets;
  ss.rel = "stylesheet";
  ss.href = href.trim();
  ss.media = "only x";
  ref.parentNode.appendChild( ss, ref );
  function toggleMedia(){
    var defined;
    for( var i = 0; i < sheets.length; i++ ){
      if( sheets[ i ].href && sheets[ i ].href.indexOf( href.trim().substr(-8)) > -1 ){
        defined = true;
      }
    }
    if( defined ){
      ss.media = media || "all";
    }
    else {
      setTimeout( toggleMedia );
    }
  }

  toggleMedia();
  return ss;
}

window.loadCSS = loadCSS;

function whenAvailable(name, callback, ms) {
    const interval = ms ? ms : 15; // ms
    var timeout = window.setTimeout(function() {
        if (window[name]) {
            window.clearTimeout(timeout);
            callback(window[name]);
        } else {
            window.setTimeout(arguments.callee, interval);
        }
    }, interval);
}
window.whenAvailable = whenAvailable;

function loadJs(src) {
  var ref = window.document.getElementsByTagName("head")[0];
  var script = window.document.createElement("script");
  script.src = src;
  script.defer = 1;
  ref.parentNode.insertBefore(script, ref);
  return script;
}
window.loadJs = loadJs;